<!DOCTYPE html>
<html>
<head>
    <title>Dashboard - <%= username %></title>
    <link rel='stylesheet' href='/stylesheets/style.css'/>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css"
          integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb" crossorigin="anonymous">

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
            integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
            crossorigin="anonymous" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js"
            integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh"
            crossorigin="anonymous" type="text/javascript"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js"
            integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ"
            crossorigin="anonymous" type="text/javascript"></script>

    <link href="https://afeld.github.io/emoji-css/emoji.css" rel="stylesheet">

    <link href="/font-awesome-4.7.0/css/font-awesome.css" rel="stylesheet" type="text/css">

    <link href="/stylesheets/dashboard.css" rel="stylesheet" type="text/css">

</head>
<body>

<form id="mood-entry-form">
    <textarea name="mood" class="form-control" id="mood-entry-input" style="display: none"
              form="mood-entry-form"></textarea>
    <button id="happy" type="submit" class="em em-blush" onclick="updateMood(this.id)"></button>
    <button id="crying" type="submit" class="em em-cry" onclick="updateMood(this.id)"></button>
    <button id="angry" type="submit" class="em em-angry" onclick="updateMood(this.id)"></button>
    <button id="disappointed" type="submit" class="em em-disappointed" onclick="updateMood(this.id)"></button>
    <button id="expressionless" type="submit" class="em em-expressionless" onclick="updateMood(this.id)"></button>
    <button id="astonished" type="submit" class="em em-astonished" onclick="updateMood(this.id)"></button>
</form>

<% include partials/nav.ejs %>

<form id="journal-entry-form">
    <div class="form-group">
        <label class="sr-only" for="journal-entry-input">Journal</label>
        <textarea name="journalEntry" class="form-control" id="journal-entry-input" form="journal-entry-form"
                  placeholder="Dear Journal..." required></textarea>
    </div>
    <button type="submit" id="journal-submit-button" class=""><i class="fa fa-paper-plane-o fa-lg"></i></button>
</form>

<form id="journal-search-bar" class="form-inline">
    <div class="form-group">
        <label for="journal-search-text" class="sr-only">Search</label>
        <input type="text" name="search-text" id="journal-search-text" class="form-control journal-search-input">
    </div>

    <div class="form-group">
        <label for="journal-search-near" class="sr-only"></label>
        <button type="button" id="journal-search-near"><i class="fa fa-location-arrow fa-2x"></i></button>
    </div>
</form>


<div id="past-journal-entries"></div>

</body>

<!-- Moment JS -->
<script src="/javascripts/moment.js"></script>
<script src="/javascripts/moment-timezone-10-20.js"></script>

<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script src="/javascripts/FormHandlers.js"></script>
<script src="/javascripts/JournalEntryList.js"></script>
<script>

    $(function () {

        let entryList;

        // Submit the form in the background
        submitWithGeo('#nearby-journal-entry-form', '/journal/entriesNearPoint', (responseData, formData, formElem) => {

            // TODO: testing
            console.log(responseData);

            if (responseData['success'] === true) {
                //document.getElementById('journal-entry-form').reset();
            } else {
                console.log(responseData);
                alert('There was an error adding the journal entry');
            }
        });

        let searchText = $('#journal-search-text');

        // Load past journal entries
        $.ajax({
            type: "get",
            url: "/journal/getEntries",
            dataType: "json",
            success: function (responseData, textResponse, jqXHR) {

                console.log(responseData);

                if (responseData['success'] === true) {

                    entryList = new JournalEntryList("past-journal-entries", responseData['payload']);

                    entryList.sort();
                    entryList.display();

                    // Search for keywords
                    $('#journal-search-text').keyup(() => {
                        entryList.filter(searchText.val());
                        entryList.display();
                    })

                    // Find nearby entries
                    $('#journal-search-near').click(() => {
                        entryList.filterNear(30);
                    });


                } else {
                    console.log("There was a problem loading your journal entries")
                }
            }
        });

        // Submit the form in the background
        submitWithGeo('#journal-entry-form', '/journal/add', (responseData, formData, formElem) => {
            if (responseData['success'] === true) {
                document.getElementById('journal-entry-form').reset();

                let entry = {};

                entry['timestamp'] = responseData['timestamp'];

                // Add proper form fields
                formData.forEach((field) => {
                    entry[field['name']] = field['value'];
                });

                entry.pos = {
                    type: "Point",
                    coordinates: [entry.longitude, entry.latitude]
                }

                // TODO: Debugging
                console.log(entry);

                entryList.entries.push(entry);

                entryList.sort();
                entryList.display();

                // Add the journal entry to the page
            } else {
                console.log(responseData);
                alert('There was an error adding the journal entry');
            }
        });

        // Submit the mood form in the background
        submitWithGeo('#mood-entry-form', '/moods/add', (responseData, formData, formElem) => {
            if (responseData['success'] === true) {
                document.getElementById('mood-entry-form').reset();
            } else {
                alert('There was an error adding the mood entry');
            }
        });
    });


    function updateMood(id) {
        document.getElementById("mood-entry-input").value = id;
        console.log("mood updated to " + document.getElementById("mood-entry-input").value);
    }

    // Load past mood entries
    $.ajax({
        type: "get",
        url: "/moods/getEntries",
        dataType: "json",
        success: function (responseData, textResponse, jqXHR) {

            console.log(responseData);

            return 0;

            if (responseData['success'] === true) {
                console.log(responseData);
            } else {
                console.log("There was a problem loading your journal entries")
            }
        }
    });

</script>
</html>